{"version":3,"file":"static/js/438.1f317ddd.chunk.js","mappings":"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","sources":["Components/FetchAPI/FetchAPI.jsx","Components/RenderFilms/RenderFilms.jsx","Components/views/MoviesView.jsx","webpack://goit-react-hw-05-movies/./src/Components/RenderFilms/RenderFilms.module.css?25b0"],"sourcesContent":["const axios = require(\"axios\").default;\nclass FetchApi {\n  constructor() {\n    this.BASE_URL = \"https://api.themoviedb.org\";\n    this.KEY = \"?api_key=704271a1143bfd554df4b5f395de669f\";\n    this.searchQuery = \"\";\n    this.URL_BY_ID = \"https://api.themoviedb.org\";\n  }\n\n  async fetchFilms() {\n    const fetchResponse = await axios.get(\n      `${this.BASE_URL}/3/movie/popular${this.KEY}`\n    );\n\n    return fetchResponse;\n  }\n\n  async fetchMoviesById(id) {\n    const fetchResponseById = await axios.get(\n      `${this.URL_BY_ID}/3/movie/${id}${this.KEY}`\n    );\n    return fetchResponseById;\n  }\n\n  async fetchMoviesByName() {\n    const fetchResponseByName = await axios.get(\n      `${this.BASE_URL}/3/search/movie${this.KEY}&query=${this.searchQuery}`\n    );\n    return fetchResponseByName;\n  }\n\n  async fetchCastById(id) {\n    const fetchCastById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/credits${this.KEY}`\n    );\n    return fetchCastById;\n  }\n\n  async fetchReviewById(id) {\n    const fetchReviewById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/reviews${this.KEY}`\n    );\n    return fetchReviewById;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n\nexport { FetchApi };\n","import { Link } from \"react-router-dom\";\nimport s from \"./RenderFilms.module.css\";\nfunction RenderFilms({ films, query }) {\n  return (\n    <ul>\n      {films.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link\n            to={`movies/${id}`}\n            className={s.film}\n            state={{ pathname: `/` }}\n          >\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction RenderFilmsByName({ films, query }) {\n  return (\n    <ul>\n      {films.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link\n            to={`${id}`}\n            className={s.film}\n            state={{ pathname: `/movies?query=${query}` }}\n          >\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport { RenderFilms, RenderFilmsByName };\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { ImSearch } from \"react-icons/im\";\nimport { FetchApi } from \"../FetchAPI/FetchAPI\";\nimport { RenderFilmsByName } from \"../RenderFilms/RenderFilms\";\nconst fetchFilms = new FetchApi();\n\nexport default function MoviesView({ handleSearchValue }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [value, setValue] = useState(\"\");\n  const [filmsFound, setFilmsFound] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n  function handleChange(e) {\n    setValue(e.currentTarget.value.toLowerCase());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    handleSearchValue(value);\n    fetchFilms.query = value;\n    fetchFilms.fetchMoviesByName().then(({ data }) => {\n      if (data.results.length > 0) {\n        setFilmsFound(data.results);\n        setStatus(\"resolved\");\n\n        navigate(`?query=${value}`);\n      }\n      console.log(data.results);\n    });\n    console.log(location);\n  }\n\n  useEffect(() => {\n    if (location.search && !filmsFound) {\n      const previousSearch = location.search.slice(7);\n      fetchFilms.query = previousSearch;\n      fetchFilms.fetchMoviesByName().then(({ data }) => {\n        if (data.results.length > 0) {\n          setFilmsFound(data.results);\n          setStatus(\"resolved\");\n        }\n      });\n    }\n  }, [location.search, filmsFound]);\n\n  return (\n    <>\n      <form className=\"SearchForm\" id=\"search-form\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <ImSearch />\n        </button>\n\n        <input\n          className=\"search-form__input\"\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n      {status === \"resolved\" && (\n        <RenderFilmsByName films={filmsFound} query={value} />\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"film\":\"RenderFilms_film__g0On8\",\"castList\":\"RenderFilms_castList__y1Sy2\",\"castItem\":\"RenderFilms_castItem__xt9Z1\",\"castPhoto\":\"RenderFilms_castPhoto__d7+qQ\",\"castImg\":\"RenderFilms_castImg__05Ak4\",\"castInfo\":\"RenderFilms_castInfo__lt9X9\"};"],"names":["axios","require","FetchApi","this","BASE_URL","KEY","searchQuery","URL_BY_ID","get","fetchResponse","id","fetchResponseById","fetchResponseByName","fetchCastById","fetchReviewById","newQuery","RenderFilms","films","query","map","original_title","to","className","s","state","pathname","RenderFilmsByName","fetchFilms","MoviesView","handleSearchValue","location","useLocation","navigate","useNavigate","useState","value","setValue","filmsFound","setFilmsFound","status","setStatus","useEffect","search","previousSearch","slice","fetchMoviesByName","then","data","results","length","onSubmit","e","preventDefault","console","log","type","name","autoComplete","placeholder","onChange","currentTarget","toLowerCase"],"sourceRoot":""}