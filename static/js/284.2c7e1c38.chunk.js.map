{"version":3,"file":"static/js/284.2c7e1c38.chunk.js","mappings":"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","sources":["Components/FetchAPI/FetchAPI.jsx","webpack://goit-react-hw-05-movies/./src/Components/Button/Button.module.css?015d","Components/Button/Button.jsx","Components/views/CurrentMovieView.jsx"],"sourcesContent":["const axios = require(\"axios\").default;\nclass FetchApi {\n  constructor() {\n    this.BASE_URL = \"https://api.themoviedb.org\";\n    this.KEY = \"?api_key=704271a1143bfd554df4b5f395de669f\";\n    this.searchQuery = \"\";\n    this.URL_BY_ID = \"https://api.themoviedb.org\";\n  }\n\n  async fetchFilms() {\n    const fetchResponse = await axios.get(\n      `${this.BASE_URL}/3/movie/popular${this.KEY}`\n    );\n\n    return fetchResponse;\n  }\n\n  async fetchMoviesById(id) {\n    const fetchResponseById = await axios.get(\n      `${this.URL_BY_ID}/3/movie/${id}${this.KEY}`\n    );\n    return fetchResponseById;\n  }\n\n  async fetchMoviesByName() {\n    const fetchResponseByName = await axios.get(\n      `${this.BASE_URL}/3/search/movie${this.KEY}&query=${this.searchQuery}`\n    );\n    return fetchResponseByName;\n  }\n\n  async fetchCastById(id) {\n    const fetchCastById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/credits${this.KEY}`\n    );\n    return fetchCastById;\n  }\n\n  async fetchReviewById(id) {\n    const fetchReviewById = await axios.get(\n      `${this.BASE_URL}/3/movie/${id}/reviews${this.KEY}`\n    );\n    return fetchReviewById;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n\nexport { FetchApi };\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__PTTqT\"};","import s from \"./Button.module.css\";\n\nfunction BackButton() {\n  return (\n    <button type=\"button\" className={s.btn}>\n      Back\n    </button>\n  );\n}\n\nexport { BackButton };\n","import { useParams, Route, Routes, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, lazy, Suspense } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FetchApi } from \"../FetchAPI/FetchAPI\";\nimport { BackButton } from \"../Button/Button\";\nconst fetchFilms = new FetchApi();\nconst BASE_POSTER_URL = \"https://image.tmdb.org/t/p/w500/\";\n\nconst Cast = lazy(() => import(\"./Cast.jsx\" /* webpackChunkName: cast*/));\nconst Review = lazy(() => import(\"./Review.jsx\" /* webpackChunkName: review*/));\n\nexport default function CurrentMovieView({ finalFilms }) {\n  const [movie, setMovie] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    fetchFilms.fetchMoviesById(params.id).then((response) => {\n      setMovie(response.data);\n    });\n  }, [params.id]);\n  console.log(movie);\n  const location = useLocation();\n  console.log(location.state);\n  if (movie) {\n    return (\n      <>\n        <div className=\"container\">\n          <Link to={location.state}>\n            <BackButton />\n          </Link>\n          <div className=\"currentFilmBlock\">\n            <div className=\"posterBlock\">\n              <img\n                src={BASE_POSTER_URL + movie.poster_path}\n                alt={movie.original_title}\n                className=\"poster\"\n              />\n            </div>\n            <div className=\"infoBlock\">\n              <h1>\n                {movie.original_title + `(${movie.release_date.substr(0, 4)})`}\n              </h1>\n              <p>User score: {movie.vote_average * 10 + \"%\"}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n\n              <h3>Genres</h3>\n              <p>{movie.genres.map(({ name }) => `${name}, `)}</p>\n            </div>\n          </div>\n          <hr />\n          <div className=\"additionalInfo\">\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to={\"cast\"} state={location.state}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={\"review\"} state={location.state}>\n                  Review\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <hr />\n        </div>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={params.id} />}></Route>\n            <Route path=\"review\" element={<Review id={params.id} />}></Route>\n          </Routes>\n        </Suspense>\n      </>\n    );\n  }\n}\n"],"names":["axios","require","FetchApi","this","BASE_URL","KEY","searchQuery","URL_BY_ID","get","fetchResponse","id","fetchResponseById","fetchResponseByName","fetchCastById","fetchReviewById","newQuery","BackButton","type","className","s","fetchFilms","Cast","lazy","Review","CurrentMovieView","finalFilms","useState","movie","setMovie","params","useParams","useEffect","fetchMoviesById","then","response","data","console","log","location","useLocation","state","to","src","poster_path","alt","original_title","release_date","substr","vote_average","overview","genres","map","name","Suspense","fallback","path","element"],"sourceRoot":""}